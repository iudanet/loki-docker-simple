version: "3"
volumes:
  data_grafana:
  data_loki:


networks:
  loki:

services:

  loki:
    profiles: ["all"]
    labels:
      - env=${APP_ENV:-infra}
    image: grafana/loki:3.1.0
    restart: unless-stopped
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml:ro
      - ${LOKI_STORAGE_DIR:-data_loki}:/loki
    ports:
      - "${LOKI_PUBLIC_HOST:-127.0.0.1:3100}:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - loki

  promtail:
    profiles: ["all", logs]
    labels:
      - env=${APP_ENV:-infra}
    restart: unless-stopped
    image: grafana/promtail:3.1.0
    volumes:
      - ./promtail-docker.yaml:/etc/promtail/promtail-docker.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - -config.file=/etc/promtail/promtail-docker.yaml
      - -config.expand-env=true
    environment:
      - SERVER_NAME
      - LOKI_URL
    networks:
      - loki

  grafana:
    profiles: ["all"]
    labels:
      - env=${APP_ENV:-infra}
    restart: unless-stopped
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ADMIN_PASSWORD=${GF_PASSWORD:-super_pass}
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
            jsonData:
              httpHeaderName1: "X-Scope-OrgID"
            secureJsonData:
              httpHeaderValue1: "tenant1"
        EOF
        /run.sh
    image: grafana/grafana:latest
    volumes:
      - data_grafana:/var/lib/grafana
    ports:
      - "${GF_PUBLIC_HOST:-127.0.0.1:3000}:3000"
    networks:
      - loki
